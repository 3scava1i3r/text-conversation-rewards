name: "Update Configuration"

on:
  workflow_dispatch:
  push:

jobs:
  update:
    name: "Update Configuration in manifest.json"
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: "20.10.0"

      - name: Install deps and run configuration update
        run: |
          yarn install --immutable --immutable-cache --check-cache
          yarn tsc --noCheck --project tsconfig.json -m commonjs

      - uses: Meniole/action-update-manifest@main
        with:
#          location: "${{ github.workspace }}/src/types/plugin-inputs"
          manifest-path: "./src/types/plugin-inputs"
          commit-message: "chore: update"
          schema-path: "src/types/plugin-inputs"
#
#      - name: Update manifest configuration using GitHub Script
#        uses: actions/github-script@v7
#        with:
#          script: |
#            const fs = require('fs');
#            const path = require('path');
#
#            const { pluginSettingsSchema } = require('./src/types/plugin-inputs');
#
#            const manifestPath = path.resolve("${{ github.workspace }}", './manifest.json');
#            const manifest = JSON.parse(fs.readFileSync(manifestPath, 'utf8'));
#
#            const configuration = JSON.stringify(pluginSettingsSchema);
#
#            manifest["configuration"] = JSON.parse(configuration);
#
#            const updatedManifest = JSON.stringify(manifest, null, 2)
#            console.log('Updated manifest:', updatedManifest);
#            fs.writeFileSync(manifestPath, updatedManifest);
#
#      - name: Commit and Push generated types
#        run: |
#          yarn format:prettier
#          git add ./manifest.json
#          git pull
#
#      - if: ${{ steps.commit.outputs.commit != null }}
#        run: git push origin HEAD:${{ github.ref_name }}
