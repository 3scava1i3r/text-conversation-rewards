[
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2030164289",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2030164289",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2030164289,
    "node_id": "IC_kwDOLUK0B855AdlB",
    "user": {
      "login": "0x4007",
      "id": 4975670,
      "node_id": "MDQ6VXNlcjQ5NzU2NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4975670?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x4007",
      "html_url": "https://github.com/0x4007",
      "followers_url": "https://api.github.com/users/0x4007/followers",
      "following_url": "https://api.github.com/users/0x4007/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x4007/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x4007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x4007/subscriptions",
      "organizations_url": "https://api.github.com/users/0x4007/orgs",
      "repos_url": "https://api.github.com/users/0x4007/repos",
      "events_url": "https://api.github.com/users/0x4007/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x4007/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-04-01T17:02:54Z",
    "updated_at": "2024-04-01T17:04:15Z",
    "author_association": "MEMBER",
    "body": "@whilefoo rfc on how we can deal with comment outputs. Perhaps we can have a standard recognized property on the output interface? Then the kernel can decide whether to pass it around or something. \r\n\r\n```ts\r\ninterface PluginOutput {\r\n  comment: string; // html comment\r\n  rewards: Rewards; // { \"whilefoo\": \"500\", \"token\": \"0x0\" } etc\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2030164289/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2030221788",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2030221788",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2030221788,
    "node_id": "IC_kwDOLUK0B855Arnc",
    "user": {
      "login": "jordan-ae",
      "id": 33989423,
      "node_id": "MDQ6VXNlcjMzOTg5NDIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/33989423?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jordan-ae",
      "html_url": "https://github.com/jordan-ae",
      "followers_url": "https://api.github.com/users/jordan-ae/followers",
      "following_url": "https://api.github.com/users/jordan-ae/following{/other_user}",
      "gists_url": "https://api.github.com/users/jordan-ae/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jordan-ae/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jordan-ae/subscriptions",
      "organizations_url": "https://api.github.com/users/jordan-ae/orgs",
      "repos_url": "https://api.github.com/users/jordan-ae/repos",
      "events_url": "https://api.github.com/users/jordan-ae/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jordan-ae/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-04-01T17:36:50Z",
    "updated_at": "2024-04-01T17:36:50Z",
    "author_association": "NONE",
    "body": "/start",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2030221788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2030221968",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2030221968",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2030221968,
    "node_id": "IC_kwDOLUK0B855ArqQ",
    "user": {
      "login": "ubiquity-os[bot]",
      "id": 113181824,
      "node_id": "BOT_kgDOBr8EgA",
      "avatar_url": "https://avatars.githubusercontent.com/in/236521?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ubiquity-os%5Bbot%5D",
      "html_url": "https://github.com/apps/ubiquity-os",
      "followers_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2024-04-01T17:36:59Z",
    "updated_at": "2024-04-01T17:36:59Z",
    "author_association": "NONE",
    "body": "\n<code>\n<table>\n\n<tr><td>Deadline</td><td>Mon, Apr 1, 7:36 PM UTC</td></tr>\n<tr>\n<td>Registered Wallet</td>\n<td>0x2F05fD58023B0a95d1866aa0A3b672cEf05945c5</td>\n</tr>\n\n\n\n</table></code>\n<h6>Tips:</h6>\n    <ul>\n    <li>Use <code>/wallet 0x0000...0000</code> if you want to update your registered payment wallet address.</li>\n    <li>Be sure to open a draft pull request as soon as possible to communicate updates on your progress.</li>\n    <li>Be sure to provide timely updates to us when requested, or you will be automatically unassigned from the task.</li>\n    <ul>\n<!-- Ubiquity - Assignment - start - e402d16\n{\n  \"duration\": 7200,\n  \"priceLabel\": {\n    \"id\": 6768021882,\n    \"node_id\": \"LA_kwDOLUK0B88AAAABk2fReg\",\n    \"url\": \"https://api.github.com/repos/ubiquity-os/conversation-rewards/labels/Price:%20100%20USD\",\n    \"name\": \"Price: 100 USD\",\n    \"color\": \"1f883d\",\n    \"default\": false,\n    \"description\": null\n  }\n}\n-->",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2030221968/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": {
      "id": 236521,
      "slug": "ubiquity-os",
      "node_id": "A_kwHOBI33Lc4AA5vp",
      "owner": {
        "login": "ubiquity",
        "id": 76412717,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjc2NDEyNzE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/76412717?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ubiquity",
        "html_url": "https://github.com/ubiquity",
        "followers_url": "https://api.github.com/users/ubiquity/followers",
        "following_url": "https://api.github.com/users/ubiquity/following{/other_user}",
        "gists_url": "https://api.github.com/users/ubiquity/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ubiquity/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ubiquity/subscriptions",
        "organizations_url": "https://api.github.com/users/ubiquity/orgs",
        "repos_url": "https://api.github.com/users/ubiquity/repos",
        "events_url": "https://api.github.com/users/ubiquity/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ubiquity/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "name": "UbiquiBot",
      "description": "This bot automates functionality of the DevPool by Ubiquity DAO.",
      "external_url": "https://github.com/ubiquity/ubiquity-os",
      "html_url": "https://github.com/apps/ubiquity-os",
      "created_at": "2022-09-09T11:32:39Z",
      "updated_at": "2024-08-14T05:53:50Z",
      "permissions": {
        "actions": "write",
        "contents": "write",
        "issues": "write",
        "members": "read",
        "metadata": "read",
        "pull_requests": "write"
      },
      "events": [
        "commit_comment",
        "create",
        "delete",
        "fork",
        "gollum",
        "issues",
        "issue_comment",
        "label",
        "member",
        "membership",
        "merge_queue_entry",
        "milestone",
        "organization",
        "public",
        "pull_request",
        "pull_request_review",
        "pull_request_review_comment",
        "pull_request_review_thread",
        "push",
        "release",
        "repository",
        "repository_dispatch",
        "star",
        "team",
        "team_add",
        "watch",
        "workflow_dispatch",
        "workflow_job",
        "workflow_run"
      ]
    }
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2033404518",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2033404518",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2033404518,
    "node_id": "IC_kwDOLUK0B855M0pm",
    "user": {
      "login": "gentlementlegen",
      "id": 9807008,
      "node_id": "MDQ6VXNlcjk4MDcwMDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9807008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gentlementlegen",
      "html_url": "https://github.com/gentlementlegen",
      "followers_url": "https://api.github.com/users/gentlementlegen/followers",
      "following_url": "https://api.github.com/users/gentlementlegen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gentlementlegen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gentlementlegen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gentlementlegen/subscriptions",
      "organizations_url": "https://api.github.com/users/gentlementlegen/orgs",
      "repos_url": "https://api.github.com/users/gentlementlegen/repos",
      "events_url": "https://api.github.com/users/gentlementlegen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gentlementlegen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-04-03T02:05:44Z",
    "updated_at": "2024-04-03T02:05:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "This needs https://github.com/ubiquity-os/conversation-rewards/pull/7 to be merged first. Also probably needs https://github.com/ubiquity-os/permit-generation/pull/2 to be able to generate the permits properly.",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2033404518/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2033488255",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2033488255",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2033488255,
    "node_id": "IC_kwDOLUK0B855NJF_",
    "user": {
      "login": "0x4007",
      "id": 4975670,
      "node_id": "MDQ6VXNlcjQ5NzU2NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4975670?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x4007",
      "html_url": "https://github.com/0x4007",
      "followers_url": "https://api.github.com/users/0x4007/followers",
      "following_url": "https://api.github.com/users/0x4007/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x4007/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x4007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x4007/subscriptions",
      "organizations_url": "https://api.github.com/users/0x4007/orgs",
      "repos_url": "https://api.github.com/users/0x4007/repos",
      "events_url": "https://api.github.com/users/0x4007/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x4007/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-04-03T04:04:16Z",
    "updated_at": "2024-04-03T04:04:16Z",
    "author_association": "MEMBER",
    "body": "> This needs https://github.com/ubiquity-os/conversation-rewards/pull/7 to be merged first. Also probably needs https://github.com/ubiquity-os/permit-generation/pull/2 to be able to generate the permits properly.\n\nI think you should fork from and overtake that second pull due to us being behind schedule ",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2033488255/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2035427134",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2035427134",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2035427134,
    "node_id": "IC_kwDOLUK0B855Uic-",
    "user": {
      "login": "whilefoo",
      "id": 139262667,
      "node_id": "U_kgDOCEz6yw",
      "avatar_url": "https://avatars.githubusercontent.com/u/139262667?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/whilefoo",
      "html_url": "https://github.com/whilefoo",
      "followers_url": "https://api.github.com/users/whilefoo/followers",
      "following_url": "https://api.github.com/users/whilefoo/following{/other_user}",
      "gists_url": "https://api.github.com/users/whilefoo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/whilefoo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/whilefoo/subscriptions",
      "organizations_url": "https://api.github.com/users/whilefoo/orgs",
      "repos_url": "https://api.github.com/users/whilefoo/repos",
      "events_url": "https://api.github.com/users/whilefoo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/whilefoo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-04-03T19:34:29Z",
    "updated_at": "2024-04-03T19:34:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @whilefoo rfc on how we can deal with comment outputs. Perhaps we can have a standard recognized property on the output interface? Then the kernel can decide whether to pass it around or something.\r\n> \r\n> ```ts\r\n> interface PluginOutput {\r\n>   comment: string; // html comment\r\n>   rewards: Rewards; // { \"whilefoo\": \"500\", \"token\": \"0x0\" } etc\r\n> }\r\n> ```\r\n\r\nthere are a couple of options:\r\n1. we let the conversation-rewards plugin generate and post the comment\r\n2. we put comment as output and then another module is responsible for posting it or let conversation-rewards generate rewards and permit-generation generate permits and a third module that uses output from previous plugins to make a comment and post it\r\n3. we let the conversation-rewards plugin generate the comment and pass it as a standard property like you suggested.\r\n\r\nIn theory 2. option sounds good to separate concerns but it's another plugin which means another call to github actions thus more latency, so for the sake of speed it'd go with option 1 or 3, but going with these 2 options would mean there will 1 comment for rewards summary and 1 comment for permits.\r\nI'm not sure if option 3 is any better than option 1 because the plugin already has a token that has permissions to post comments so passing it to the kernel doesn't make much difference.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2035427134/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2036174312",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036174312",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2036174312,
    "node_id": "IC_kwDOLUK0B855XY3o",
    "user": {
      "login": "gentlementlegen",
      "id": 9807008,
      "node_id": "MDQ6VXNlcjk4MDcwMDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9807008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gentlementlegen",
      "html_url": "https://github.com/gentlementlegen",
      "followers_url": "https://api.github.com/users/gentlementlegen/followers",
      "following_url": "https://api.github.com/users/gentlementlegen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gentlementlegen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gentlementlegen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gentlementlegen/subscriptions",
      "organizations_url": "https://api.github.com/users/gentlementlegen/orgs",
      "repos_url": "https://api.github.com/users/gentlementlegen/repos",
      "events_url": "https://api.github.com/users/gentlementlegen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gentlementlegen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-04-04T04:33:44Z",
    "updated_at": "2024-04-04T04:35:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "To me 1 is the most straightforward to do for few reasons:\r\n- the comment reward plugin has all the needed data already\r\n- it can import the https://github.com/ubiquity-os/permit-generation to generate permits itself\r\n- if it is done this way it can be used as a complete standalone without the kernel\r\n\r\n3 might make more sense in terms of architecture however. In such case the kernel should pass down results. It is more of an architecture question. Although, if we ever have other plugins in the flow that have influence on the total incentives, it would make sense to go through the kernel to aggregate the total result.",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2036174312/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2036355445",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036355445",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2036355445,
    "node_id": "IC_kwDOLUK0B855YFF1",
    "user": {
      "login": "0x4007",
      "id": 4975670,
      "node_id": "MDQ6VXNlcjQ5NzU2NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4975670?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x4007",
      "html_url": "https://github.com/0x4007",
      "followers_url": "https://api.github.com/users/0x4007/followers",
      "following_url": "https://api.github.com/users/0x4007/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x4007/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x4007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x4007/subscriptions",
      "organizations_url": "https://api.github.com/users/0x4007/orgs",
      "repos_url": "https://api.github.com/users/0x4007/repos",
      "events_url": "https://api.github.com/users/0x4007/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x4007/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-04-04T07:07:18Z",
    "updated_at": "2024-04-04T07:13:32Z",
    "author_association": "MEMBER",
    "body": "> \r\n> there are a couple of options:\r\n> \r\n> 1. we let the conversation-rewards plugin generate and post the comment\r\n\r\nI think the most pure architecture would be that plugins can NOT inherit (write) authentication (only read if possible) of the kernel. As a consequence, no plugin should be able to post directly any issue. Ideally it should only be the kernel with a direct interface to issues. Plugins should just output comment HTML and the kernel can post it all in a single comment at the end of the webhook event invocation chain.\r\n\r\n> 2. we put comment as output and then another module is responsible for posting it or let conversation-rewards generate rewards and permit-generation generate permits and a third module that uses output from previous plugins to make a comment and post it\r\n\r\nCould be interesting to have a dedicated plugin to handle commenting, but because this seems like such an essential capability, I would more carefully consider the pros/cons of including this within the kernel. \r\n\r\n- On one hand, I really like the idea of making the kernel as pure and lean as possible\r\n- On the other hand there are practical considerations that if every plugin standard output interface includes `comment:` and then we don't have the `comment` capability available (the comment plugin is not included in the config) then why is this a standard output property required on every plugin?\r\n\r\n> 3. we let the conversation-rewards plugin generate the comment and pass it as a standard property like you suggested.\r\n> \r\n> In theory 2. option sounds good to separate concerns but it's another plugin which means another call to github actions thus more latency, so for the sake of speed it'd go with option 1 or 3, but going with these 2 options would mean there will 1 comment for rewards summary and 1 comment for permits. I'm not sure if option 3 is any better than option 1 because the plugin already has a token that has permissions to post comments so passing it to the kernel doesn't make much difference.\r\n\r\nI'm not concerned about latency now. Besides we can port any plugin to Cloudflare Workers (or combine several inside a single Worker) when we are ready to fix latency issues. To be honest though, except for setting labels, I have no problem with latency (like with permit generation) so there's no need to overengineer yet. I also love the GitHub Actions logs being available for easy debugging, and the fact that they are super generous with the compute. \r\n\r\nGiven the entire conversation and all the considerations, I definitely think we should do option 3. \r\n\r\nThis separates concerns the best, which will allow our plugin ecosystem to grow the fastest. ",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2036355445/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2036367126",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036367126",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2036367126,
    "node_id": "IC_kwDOLUK0B855YH8W",
    "user": {
      "login": "gentlementlegen",
      "id": 9807008,
      "node_id": "MDQ6VXNlcjk4MDcwMDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9807008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gentlementlegen",
      "html_url": "https://github.com/gentlementlegen",
      "followers_url": "https://api.github.com/users/gentlementlegen/followers",
      "following_url": "https://api.github.com/users/gentlementlegen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gentlementlegen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gentlementlegen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gentlementlegen/subscriptions",
      "organizations_url": "https://api.github.com/users/gentlementlegen/orgs",
      "repos_url": "https://api.github.com/users/gentlementlegen/repos",
      "events_url": "https://api.github.com/users/gentlementlegen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gentlementlegen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-04-04T07:13:44Z",
    "updated_at": "2024-04-04T07:13:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think each plugin should output JSON not html as it is not reliable to parse nor manipulate and requires `window` instance to be instantiated which is annoying on `node` based projects. \r\n\r\nHaving a plugin handling commenting seems quite weird as commenting is done by calling Octokit and the REST api which is already a library by itself, so no need to encapsulate it within another one to do the same thing.\r\n\r\nMy view on this, is to finalize https://github.com/ubiquity-os/permit-generation/issues/5 to import it withing the `conversation-reward` that will post the comment itself as well, otherwise the architecture will be quite convoluted doing ping pong with everything.",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2036367126/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2036370459",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036370459",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2036370459,
    "node_id": "IC_kwDOLUK0B855YIwb",
    "user": {
      "login": "0x4007",
      "id": 4975670,
      "node_id": "MDQ6VXNlcjQ5NzU2NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4975670?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x4007",
      "html_url": "https://github.com/0x4007",
      "followers_url": "https://api.github.com/users/0x4007/followers",
      "following_url": "https://api.github.com/users/0x4007/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x4007/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x4007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x4007/subscriptions",
      "organizations_url": "https://api.github.com/users/0x4007/orgs",
      "repos_url": "https://api.github.com/users/0x4007/repos",
      "events_url": "https://api.github.com/users/0x4007/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x4007/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-04-04T07:15:45Z",
    "updated_at": "2024-04-04T07:22:29Z",
    "author_association": "MEMBER",
    "body": "> I think each plugin should output JSON not html as it is not reliable to parse nor manipulate\r\n\r\nI know JSON makes things more complicated than it needs to be with serialization/transport. Then we have problems like this https://github.com/ubiquity-os/conversation-rewards/issues/18. If the comment property is ONLY meant to be used for GitHub comments, then transporting HTML only is the most sensible. Besides, there's no other metadata thats necessary within the `comment` property, which is the main point of sending a JSON object (it has multiple properties.) \r\n\r\nAs a somewhat side note: there should also not be any variables inside of the HTML. We could look it as like server-side-rendering (or in this case, plugin-side-rendering) handle producing the final HTML output and then output it as a single string of html entities. \r\n\r\n> requires window instance to be instantiated which is annoying on node based projects.\r\n\r\nWe are currently using `mdast` in `@ubiquity-os/comment-incentives` to generate virtual DOMs. No `window` needed.\r\n\r\n> My view on this, is to finalize https://github.com/ubiquity-os/permit-generation/issues/5 to import it withing the conversation-reward that will post the comment itself as well, otherwise the architecture will be quite convoluted doing ping pong with everything.\r\n\r\nIf we agree that this is considered as technical debt, and that we are accruing this so that we can get back on schedule, ok.",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2036370459/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2036385985",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036385985",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2036385985,
    "node_id": "IC_kwDOLUK0B855YMjB",
    "user": {
      "login": "gentlementlegen",
      "id": 9807008,
      "node_id": "MDQ6VXNlcjk4MDcwMDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9807008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gentlementlegen",
      "html_url": "https://github.com/gentlementlegen",
      "followers_url": "https://api.github.com/users/gentlementlegen/followers",
      "following_url": "https://api.github.com/users/gentlementlegen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gentlementlegen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gentlementlegen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gentlementlegen/subscriptions",
      "organizations_url": "https://api.github.com/users/gentlementlegen/orgs",
      "repos_url": "https://api.github.com/users/gentlementlegen/repos",
      "events_url": "https://api.github.com/users/gentlementlegen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gentlementlegen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-04-04T07:24:01Z",
    "updated_at": "2024-04-04T07:25:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "If you want to manipulate and convey data, HTML really is not made for this. If you want something formatted similarly but made for data we can use XML format.\r\nThe new comment reward actually does instantiate a DOM through [JSDOM](https://github.com/ubiquity-os/conversation-rewards/blob/ba434761281446a23566cd02c68bd3b0e79d4eb1/src/parser/formatting-evaluator-module.ts#L80) to make things way simpler instead of using Regex everywhere which is highly unreliable. But there it makes sense because we are parsing comments from an HTML page content.\r\n\r\nBiggest advantage from this is to have the comment reward fully standalone, while easy to integrate with the kernel.\r\n\r\nIf we do something that handles the comment it means each and every module has to send it there and that module should understand every different content / format we send which would be way easier if the module itself handled its own comments, formatting wise.",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2036385985/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2036393020",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036393020",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2036393020,
    "node_id": "IC_kwDOLUK0B855YOQ8",
    "user": {
      "login": "0x4007",
      "id": 4975670,
      "node_id": "MDQ6VXNlcjQ5NzU2NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4975670?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x4007",
      "html_url": "https://github.com/0x4007",
      "followers_url": "https://api.github.com/users/0x4007/followers",
      "following_url": "https://api.github.com/users/0x4007/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x4007/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x4007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x4007/subscriptions",
      "organizations_url": "https://api.github.com/users/0x4007/orgs",
      "repos_url": "https://api.github.com/users/0x4007/repos",
      "events_url": "https://api.github.com/users/0x4007/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x4007/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-04-04T07:27:54Z",
    "updated_at": "2024-04-04T07:33:54Z",
    "author_association": "MEMBER",
    "body": "> If you want to manipulate and convey data, HTML really is not made for this.\r\n\r\nGoing back to my \"plugin-side-rendering\" mention, the data manipulation happens inside of the logic of the plugin. Then when the plugin is finally done with all of its compute, it emits a single string in the `comment` output property. This string is the final, rendered HTML. \r\n\r\nThe `comment` output is not intended to be consumed by other plugins. In most cases, the kernel will concatenate all the `comment` outputs from every plugin and post a single comment at the end. Plugins will consume the `metadata` property output which will include raw values to work with. I forget where I originally proposed this, but imagine something like:\r\n```typescript\r\n\r\ntype HtmlString = string;\r\ntype RequestedPermits = { username: string; amount: string; token: string; }[]\r\n \r\ninterface PluginOutput {\r\n   metadata: Record<string, any>;\r\n   comment: HtmlString;\r\n   rewards: RequestedPermits;\r\n}\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2036393020/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2036411811",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036411811",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2036411811,
    "node_id": "IC_kwDOLUK0B855YS2j",
    "user": {
      "login": "gentlementlegen",
      "id": 9807008,
      "node_id": "MDQ6VXNlcjk4MDcwMDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9807008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gentlementlegen",
      "html_url": "https://github.com/gentlementlegen",
      "followers_url": "https://api.github.com/users/gentlementlegen/followers",
      "following_url": "https://api.github.com/users/gentlementlegen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gentlementlegen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gentlementlegen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gentlementlegen/subscriptions",
      "organizations_url": "https://api.github.com/users/gentlementlegen/orgs",
      "repos_url": "https://api.github.com/users/gentlementlegen/repos",
      "events_url": "https://api.github.com/users/gentlementlegen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gentlementlegen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-04-04T07:37:30Z",
    "updated_at": "2024-04-04T07:37:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "But then how do we consider the formatting of that output?\r\n\r\nPractical case: we want to post a comment when a user queries a wallet. That comment is 'user name': 'wallet 0x0'\r\nKernel calls the comment plugin, saying that it wants a comment to be posted. Should the Kernel send the rendering it wants, should the comment plugin transform the data to HTML?\r\n\r\nThen, comment-reward wants to post the results. Should ask the Kernel to call the comment plugin, but then formatting is different. Should the Kernel notify the comment plugin that it wants a different output formatting? Should the Kernel compute beforehand the HTML and send it to the comment plugin?\r\n\r\nMight be something I don't grasp there. Because I do understand your use case but it seems to be very deterministic on what is the purpose of the plugins which kinda defeats the purpose of having plugins, looks more like a monolithic approach to me",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2036411811/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2036433646",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036433646",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2036433646,
    "node_id": "IC_kwDOLUK0B855YYLu",
    "user": {
      "login": "0x4007",
      "id": 4975670,
      "node_id": "MDQ6VXNlcjQ5NzU2NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4975670?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x4007",
      "html_url": "https://github.com/0x4007",
      "followers_url": "https://api.github.com/users/0x4007/followers",
      "following_url": "https://api.github.com/users/0x4007/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x4007/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x4007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x4007/subscriptions",
      "organizations_url": "https://api.github.com/users/0x4007/orgs",
      "repos_url": "https://api.github.com/users/0x4007/repos",
      "events_url": "https://api.github.com/users/0x4007/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x4007/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-04-04T07:49:05Z",
    "updated_at": "2024-04-04T07:55:07Z",
    "author_association": "MEMBER",
    "body": "> But then how do we consider the formatting of that output?\r\n\r\nThe proposed `comment` output is intended for ease of composability for MOST situations, basically that the output from one plugin would just be appended to the final rendered comment. For simple plugin configurations (plugins not modifying the output results of others) this seems like straightforward architecture. \r\n\r\nHowever, as we know, there will be situations where a subsequent plugin will consider the results of a previous plugin, which means it would need to change the comment that is rendered. \r\n\r\nIn this situation the subsequent plugin should clobber the output of the previous plugin. It is now clear to be that this will be a new challenge to express to the kernel that it should ignore the comment output of a previous plugin. I suppose it would be straightforward in the metadata using the plugin ID i.e. `{ \"silences\": [\"ubiquity-os/conversation-rewards\"] }`.\r\n\r\n> Kernel calls the comment plugin,\r\n\r\nI think that comments should be handled from within the kernel. There should not be a separate comment plugin. Read my explanation [here](https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036355445). \r\n\r\n\r\n### Inputs\r\n\r\nFor completeness of my [previous comment](https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036393020):\r\n\r\n```typescript\r\n\r\ntype PluginId = string; // i.e. `ubiquity-os/conversation-rewards` `ubiquity-os/daemon-pricing`\r\n \r\ninterface PluginInput {\r\n   metadata: Record<PluginId, any>;\r\n   context: GitHubEventContext;\r\n}\r\n```\r\n\r\nNotice that we should not pass in the HTML of other plugins. Instead, just the metadata (\"computed\") values from the previous plugins.",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2036433646/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2036458775",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036458775",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2036458775,
    "node_id": "IC_kwDOLUK0B855YeUX",
    "user": {
      "login": "gentlementlegen",
      "id": 9807008,
      "node_id": "MDQ6VXNlcjk4MDcwMDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9807008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gentlementlegen",
      "html_url": "https://github.com/gentlementlegen",
      "followers_url": "https://api.github.com/users/gentlementlegen/followers",
      "following_url": "https://api.github.com/users/gentlementlegen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gentlementlegen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gentlementlegen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gentlementlegen/subscriptions",
      "organizations_url": "https://api.github.com/users/gentlementlegen/orgs",
      "repos_url": "https://api.github.com/users/gentlementlegen/repos",
      "events_url": "https://api.github.com/users/gentlementlegen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gentlementlegen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-04-04T08:01:43Z",
    "updated_at": "2024-04-04T08:01:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "This can work, but we skyrocket coupling and to me defeat purpose of plugins that should be unaware of each other. If any plugin has to understand the result of a previous plugin, it means these plugins have necessarily to co-exist so basically they become a single plugin with no purpose to split them.",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2036458775/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2036516869",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036516869",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2036516869,
    "node_id": "IC_kwDOLUK0B855YsgF",
    "user": {
      "login": "0x4007",
      "id": 4975670,
      "node_id": "MDQ6VXNlcjQ5NzU2NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4975670?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x4007",
      "html_url": "https://github.com/0x4007",
      "followers_url": "https://api.github.com/users/0x4007/followers",
      "following_url": "https://api.github.com/users/0x4007/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x4007/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x4007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x4007/subscriptions",
      "organizations_url": "https://api.github.com/users/0x4007/orgs",
      "repos_url": "https://api.github.com/users/0x4007/repos",
      "events_url": "https://api.github.com/users/0x4007/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x4007/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-04-04T08:26:34Z",
    "updated_at": "2024-04-04T08:26:34Z",
    "author_association": "MEMBER",
    "body": "> so basically they become a single plugin with no purpose to split them.\r\n\r\nI understand your concern and I would need to put more thought into composability. Maybe the `comment` proposal is bad after all due to your point. It's only useful with simple plugins, but for more complex ones your point is valid. \r\n\r\nI need help to think through how any partner in the future can create new plugins that modify \r\n1. permit reward amounts \r\n2. XP reward amounts\r\n\r\nI don't like the idea of having a single monolithic rewards generation plugin that wraps all the ways possible to compute rewards (i.e. time estimation, comment rewards, review rewards etc)",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2036516869/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2036535332",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036535332",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2036535332,
    "node_id": "IC_kwDOLUK0B855YxAk",
    "user": {
      "login": "gentlementlegen",
      "id": 9807008,
      "node_id": "MDQ6VXNlcjk4MDcwMDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9807008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gentlementlegen",
      "html_url": "https://github.com/gentlementlegen",
      "followers_url": "https://api.github.com/users/gentlementlegen/followers",
      "following_url": "https://api.github.com/users/gentlementlegen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gentlementlegen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gentlementlegen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gentlementlegen/subscriptions",
      "organizations_url": "https://api.github.com/users/gentlementlegen/orgs",
      "repos_url": "https://api.github.com/users/gentlementlegen/repos",
      "events_url": "https://api.github.com/users/gentlementlegen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gentlementlegen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-04-04T08:33:57Z",
    "updated_at": "2024-04-04T08:33:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pavlovcik To mitigate that that's why inside the comment reward itself I also integrated that `Module` principle so code is not coupled tightly and easy to build on. There is as usual pros and cons to both approaches (splitting or not) but biggest pro is that comments get evaluated once in the same spot, so we save calls to OpenAPI and speed up the process. Also makes it only one configuration file in one location. We need to think about our best options there.",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2036535332/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2051092124",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2051092124",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2051092124,
    "node_id": "IC_kwDOLUK0B856QS6c",
    "user": {
      "login": "ubiquity-os[bot]",
      "id": 113181824,
      "node_id": "BOT_kgDOBr8EgA",
      "avatar_url": "https://avatars.githubusercontent.com/in/236521?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ubiquity-os%5Bbot%5D",
      "html_url": "https://github.com/apps/ubiquity-os",
      "followers_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2024-04-12T06:42:39Z",
    "updated_at": "2024-04-12T06:42:39Z",
    "author_association": "NONE",
    "body": "```diff\n! action has an uncaught error\n```\n<!--\n{\n  \"handlerType\": {\n    \"type\": \"post\",\n    \"actions\": [\n      null\n    ]\n  },\n  \"activeHandler\": \"onLabelChangeSetPricing\",\n  \"error\": {\n    \"name\": \"HttpError\",\n    \"status\": 422,\n    \"response\": {\n      \"url\": \"https://api.github.com/repos/ubiquity-os/conversation-rewards/labels\",\n      \"status\": 422,\n      \"headers\": {\n        \"access-control-allow-origin\": \"*\",\n        \"access-control-expose-headers\": \"ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset\",\n        \"content-length\": \"182\",\n        \"content-security-policy\": \"default-src 'none'\",\n        \"content-type\": \"application/json; charset=utf-8\",\n        \"date\": \"Fri, 12 Apr 2024 06:42:38 GMT\",\n        \"referrer-policy\": \"origin-when-cross-origin, strict-origin-when-cross-origin\",\n        \"server\": \"GitHub.com\",\n        \"strict-transport-security\": \"max-age=31536000; includeSubdomains; preload\",\n        \"vary\": \"Accept-Encoding, Accept, X-Requested-With\",\n        \"x-accepted-github-permissions\": \"issues=write; pull_requests=write\",\n        \"x-content-type-options\": \"nosniff\",\n        \"x-frame-options\": \"deny\",\n        \"x-github-api-version-selected\": \"2022-11-28\",\n        \"x-github-media-type\": \"github.v3; format=json\",\n        \"x-github-request-id\": \"D1F8:189A4D:E0C6EA:1555A02:6618D7DE\",\n        \"x-ratelimit-limit\": \"5000\",\n        \"x-ratelimit-remaining\": \"4988\",\n        \"x-ratelimit-reset\": \"1712907757\",\n        \"x-ratelimit-resource\": \"core\",\n        \"x-ratelimit-used\": \"12\",\n        \"x-xss-protection\": \"0\"\n      },\n      \"data\": {\n        \"message\": \"Validation Failed\",\n        \"errors\": [\n          {\n            \"resource\": \"Label\",\n            \"code\": \"already_exists\",\n            \"field\": \"name\"\n          }\n        ],\n        \"documentation_url\": \"https://docs.github.com/rest/issues/labels#create-a-label\"\n      }\n    },\n    \"request\": {\n      \"method\": \"POST\",\n      \"url\": \"https://api.github.com/repos/ubiquity-os/conversation-rewards/labels\",\n      \"headers\": {\n        \"accept\": \"application/vnd.github.v3+json\",\n        \"user-agent\": \"probot/12.3.3 octokit-core.js/3.6.0 Node.js/20.11.0 (linux; x64)\",\n        \"authorization\": \"token [REDACTED]\",\n        \"content-type\": \"application/json; charset=utf-8\"\n      },\n      \"body\": \"{\\\"name\\\":\\\"Price: 400 USD\\\",\\\"color\\\":\\\"1f883d\\\"}\",\n      \"request\": {\n        \"retryCount\": 1\n      }\n    }\n  },\n  \"caller\": \"renderCatchAll\",\n  \"revision\": null\n}\n-->",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2051092124/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": {
      "id": 236521,
      "slug": "ubiquity-os",
      "node_id": "A_kwHOBI33Lc4AA5vp",
      "owner": {
        "login": "ubiquity",
        "id": 76412717,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjc2NDEyNzE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/76412717?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ubiquity",
        "html_url": "https://github.com/ubiquity",
        "followers_url": "https://api.github.com/users/ubiquity/followers",
        "following_url": "https://api.github.com/users/ubiquity/following{/other_user}",
        "gists_url": "https://api.github.com/users/ubiquity/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ubiquity/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ubiquity/subscriptions",
        "organizations_url": "https://api.github.com/users/ubiquity/orgs",
        "repos_url": "https://api.github.com/users/ubiquity/repos",
        "events_url": "https://api.github.com/users/ubiquity/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ubiquity/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "name": "UbiquiBot",
      "description": "This bot automates functionality of the DevPool by Ubiquity DAO.",
      "external_url": "https://github.com/ubiquity/ubiquity-os",
      "html_url": "https://github.com/apps/ubiquity-os",
      "created_at": "2022-09-09T11:32:39Z",
      "updated_at": "2024-08-14T05:53:50Z",
      "permissions": {
        "actions": "write",
        "contents": "write",
        "issues": "write",
        "members": "read",
        "metadata": "read",
        "pull_requests": "write"
      },
      "events": [
        "commit_comment",
        "create",
        "delete",
        "fork",
        "gollum",
        "issues",
        "issue_comment",
        "label",
        "member",
        "membership",
        "merge_queue_entry",
        "milestone",
        "organization",
        "public",
        "pull_request",
        "pull_request_review",
        "pull_request_review_comment",
        "pull_request_review_thread",
        "push",
        "release",
        "repository",
        "repository_dispatch",
        "star",
        "team",
        "team_add",
        "watch",
        "workflow_dispatch",
        "workflow_job",
        "workflow_run"
      ]
    }
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2051094255",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2051094255",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2051094255,
    "node_id": "IC_kwDOLUK0B856QTbv",
    "user": {
      "login": "gentlementlegen",
      "id": 9807008,
      "node_id": "MDQ6VXNlcjk4MDcwMDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9807008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gentlementlegen",
      "html_url": "https://github.com/gentlementlegen",
      "followers_url": "https://api.github.com/users/gentlementlegen/followers",
      "following_url": "https://api.github.com/users/gentlementlegen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gentlementlegen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gentlementlegen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gentlementlegen/subscriptions",
      "organizations_url": "https://api.github.com/users/gentlementlegen/orgs",
      "repos_url": "https://api.github.com/users/gentlementlegen/repos",
      "events_url": "https://api.github.com/users/gentlementlegen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gentlementlegen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-04-12T06:44:31Z",
    "updated_at": "2024-04-12T06:44:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "I realized that to carry this task properly we need to handle flags for comment more delicately as they only indicate if the comment is `ISSUE | REVIEW` with the level `MEMBER | CONTRIBUTOR` etc. but doesn't specify if it is from a task, a specification and so on. Tags should be added to the config properly as well.",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2051094255/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2053332029",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2053332029",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2053332029,
    "node_id": "IC_kwDOLUK0B856Y1w9",
    "user": {
      "login": "0x4007",
      "id": 4975670,
      "node_id": "MDQ6VXNlcjQ5NzU2NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4975670?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x4007",
      "html_url": "https://github.com/0x4007",
      "followers_url": "https://api.github.com/users/0x4007/followers",
      "following_url": "https://api.github.com/users/0x4007/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x4007/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x4007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x4007/subscriptions",
      "organizations_url": "https://api.github.com/users/0x4007/orgs",
      "repos_url": "https://api.github.com/users/0x4007/repos",
      "events_url": "https://api.github.com/users/0x4007/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x4007/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-04-13T04:06:19Z",
    "updated_at": "2024-04-13T04:06:19Z",
    "author_association": "MEMBER",
    "body": "> I realized that to carry this task properly we need to handle flags for comment more delicately as they only indicate if the comment is `ISSUE | REVIEW` with the level `MEMBER | CONTRIBUTOR` etc. but doesn't specify if it is from a task, a specification and so on. Tags should be added to the config properly as well.\n\nI see, so you're suggesting that we must annotate each comment as well in order to properly handle the scoring at the end?\n\nOff hand I think there's:\n\n1. Specification \n2. Issue comment\n3. Pull request comment (a normal comment on a pull request, not related to posting a \"review\"\n4. Pull request review comment (associated with a \"review state\" I.e. approved, left comments, requested changes)\n\nI suppose we need a better naming convention for the pull related ones. They are considered as separate entities according to the GitHub api. They require different methods to obtain both types. ",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2053332029/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2054424028",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2054424028",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2054424028,
    "node_id": "IC_kwDOLUK0B856dAXc",
    "user": {
      "login": "gentlementlegen",
      "id": 9807008,
      "node_id": "MDQ6VXNlcjk4MDcwMDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9807008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gentlementlegen",
      "html_url": "https://github.com/gentlementlegen",
      "followers_url": "https://api.github.com/users/gentlementlegen/followers",
      "following_url": "https://api.github.com/users/gentlementlegen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gentlementlegen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gentlementlegen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gentlementlegen/subscriptions",
      "organizations_url": "https://api.github.com/users/gentlementlegen/orgs",
      "repos_url": "https://api.github.com/users/gentlementlegen/repos",
      "events_url": "https://api.github.com/users/gentlementlegen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gentlementlegen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-04-15T02:27:24Z",
    "updated_at": "2024-04-15T02:27:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Agreed, I think currently there are 3 possible things to annotate on the comments:\r\n- `SPECIFICATION` for the issue itself, `TASK` for the related PR fixing it, or simply `COMMENT`\r\n- `MEMBER` or `CONTRIBUTOR` for the status of the member\r\n- `REVIEW` or `ISSUE` for where the comment was added\r\n\r\nI think this shall cover all cases.",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2054424028/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2055783331",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2055783331",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2055783331,
    "node_id": "IC_kwDOLUK0B856iMOj",
    "user": {
      "login": "0x4007",
      "id": 4975670,
      "node_id": "MDQ6VXNlcjQ5NzU2NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4975670?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0x4007",
      "html_url": "https://github.com/0x4007",
      "followers_url": "https://api.github.com/users/0x4007/followers",
      "following_url": "https://api.github.com/users/0x4007/following{/other_user}",
      "gists_url": "https://api.github.com/users/0x4007/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0x4007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0x4007/subscriptions",
      "organizations_url": "https://api.github.com/users/0x4007/orgs",
      "repos_url": "https://api.github.com/users/0x4007/repos",
      "events_url": "https://api.github.com/users/0x4007/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0x4007/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-04-15T07:15:04Z",
    "updated_at": "2024-04-15T07:15:29Z",
    "author_association": "MEMBER",
    "body": "Consider calling it \"contributor\" and \"collaborator\" as that is how it is presented on the GitHub APIs as I recall. \n\nAlso I think you forgot about the \"review comments\"",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2055783331/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2061410343",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2061410343",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2061410343,
    "node_id": "IC_kwDOLUK0B8563qAn",
    "user": {
      "login": "jordan-ae",
      "id": 33989423,
      "node_id": "MDQ6VXNlcjMzOTg5NDIz",
      "avatar_url": "https://avatars.githubusercontent.com/u/33989423?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jordan-ae",
      "html_url": "https://github.com/jordan-ae",
      "followers_url": "https://api.github.com/users/jordan-ae/followers",
      "following_url": "https://api.github.com/users/jordan-ae/following{/other_user}",
      "gists_url": "https://api.github.com/users/jordan-ae/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jordan-ae/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jordan-ae/subscriptions",
      "organizations_url": "https://api.github.com/users/jordan-ae/orgs",
      "repos_url": "https://api.github.com/users/jordan-ae/repos",
      "events_url": "https://api.github.com/users/jordan-ae/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jordan-ae/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-04-17T14:34:09Z",
    "updated_at": "2024-04-17T14:34:09Z",
    "author_association": "NONE",
    "body": "/stop",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2061410343/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2061410700",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2061410700",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2061410700,
    "node_id": "IC_kwDOLUK0B8563qGM",
    "user": {
      "login": "ubiquity-os[bot]",
      "id": 113181824,
      "node_id": "BOT_kgDOBr8EgA",
      "avatar_url": "https://avatars.githubusercontent.com/in/236521?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ubiquity-os%5Bbot%5D",
      "html_url": "https://github.com/apps/ubiquity-os",
      "followers_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2024-04-17T14:34:20Z",
    "updated_at": "2024-04-17T14:34:20Z",
    "author_association": "NONE",
    "body": "```diff\n+ You have been unassigned from the task\n```\n<!-- Ubiquity - ok - renderMainActionOutput - e402d16\n{\n  \"issueNumber\": 5,\n  \"user\": \"jordan-ae\",\n  \"caller\": \"stop\",\n  \"revision\": null\n}\n-->",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2061410700/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": {
      "id": 236521,
      "slug": "ubiquity-os",
      "node_id": "A_kwHOBI33Lc4AA5vp",
      "owner": {
        "login": "ubiquity",
        "id": 76412717,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjc2NDEyNzE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/76412717?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ubiquity",
        "html_url": "https://github.com/ubiquity",
        "followers_url": "https://api.github.com/users/ubiquity/followers",
        "following_url": "https://api.github.com/users/ubiquity/following{/other_user}",
        "gists_url": "https://api.github.com/users/ubiquity/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ubiquity/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ubiquity/subscriptions",
        "organizations_url": "https://api.github.com/users/ubiquity/orgs",
        "repos_url": "https://api.github.com/users/ubiquity/repos",
        "events_url": "https://api.github.com/users/ubiquity/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ubiquity/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "name": "UbiquiBot",
      "description": "This bot automates functionality of the DevPool by Ubiquity DAO.",
      "external_url": "https://github.com/ubiquity/ubiquity-os",
      "html_url": "https://github.com/apps/ubiquity-os",
      "created_at": "2022-09-09T11:32:39Z",
      "updated_at": "2024-08-14T05:53:50Z",
      "permissions": {
        "actions": "write",
        "contents": "write",
        "issues": "write",
        "members": "read",
        "metadata": "read",
        "pull_requests": "write"
      },
      "events": [
        "commit_comment",
        "create",
        "delete",
        "fork",
        "gollum",
        "issues",
        "issue_comment",
        "label",
        "member",
        "membership",
        "merge_queue_entry",
        "milestone",
        "organization",
        "public",
        "pull_request",
        "pull_request_review",
        "pull_request_review_comment",
        "pull_request_review_thread",
        "push",
        "release",
        "repository",
        "repository_dispatch",
        "star",
        "team",
        "team_add",
        "watch",
        "workflow_dispatch",
        "workflow_job",
        "workflow_run"
      ]
    }
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2062918246",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2062918246",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2062918246,
    "node_id": "IC_kwDOLUK0B8569aJm",
    "user": {
      "login": "gentlementlegen",
      "id": 9807008,
      "node_id": "MDQ6VXNlcjk4MDcwMDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9807008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gentlementlegen",
      "html_url": "https://github.com/gentlementlegen",
      "followers_url": "https://api.github.com/users/gentlementlegen/followers",
      "following_url": "https://api.github.com/users/gentlementlegen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gentlementlegen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gentlementlegen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gentlementlegen/subscriptions",
      "organizations_url": "https://api.github.com/users/gentlementlegen/orgs",
      "repos_url": "https://api.github.com/users/gentlementlegen/repos",
      "events_url": "https://api.github.com/users/gentlementlegen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gentlementlegen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2024-04-18T03:17:29Z",
    "updated_at": "2024-04-18T03:17:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "/start",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2062918246/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2062918320",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2062918320",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2062918320,
    "node_id": "IC_kwDOLUK0B8569aKw",
    "user": {
      "login": "ubiquity-os[bot]",
      "id": 113181824,
      "node_id": "BOT_kgDOBr8EgA",
      "avatar_url": "https://avatars.githubusercontent.com/in/236521?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ubiquity-os%5Bbot%5D",
      "html_url": "https://github.com/apps/ubiquity-os",
      "followers_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2024-04-18T03:17:36Z",
    "updated_at": "2024-04-18T03:17:36Z",
    "author_association": "NONE",
    "body": "\n<code>\n<table>\n\n<tr><td>Deadline</td><td>Thu, Apr 18, 7:17 AM UTC</td></tr>\n<tr>\n<td>Registered Wallet</td>\n<td>0x0fC1b909ba9265A846b82CF4CE352fc3e7EeB2ED</td>\n</tr>\n\n\n\n</table></code>\n<h6>Tips:</h6>\n    <ul>\n    <li>Use <code>/wallet 0x0000...0000</code> if you want to update your registered payment wallet address.</li>\n    <li>Be sure to open a draft pull request as soon as possible to communicate updates on your progress.</li>\n    <li>Be sure to provide timely updates to us when requested, or you will be automatically unassigned from the task.</li>\n    <ul>\n<!-- Ubiquity - Assignment - start - e402d16\n{\n  \"duration\": 14400,\n  \"priceLabel\": {\n    \"id\": 6813756143,\n    \"node_id\": \"LA_kwDOLUK0B88AAAABliGq7w\",\n    \"url\": \"https://api.github.com/repos/ubiquity-os/conversation-rewards/labels/Price:%20400%20USD\",\n    \"name\": \"Price: 400 USD\",\n    \"color\": \"1f883d\",\n    \"default\": false,\n    \"description\": null\n  }\n}\n-->",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2062918320/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": {
      "id": 236521,
      "slug": "ubiquity-os",
      "node_id": "A_kwHOBI33Lc4AA5vp",
      "owner": {
        "login": "ubiquity",
        "id": 76412717,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjc2NDEyNzE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/76412717?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ubiquity",
        "html_url": "https://github.com/ubiquity",
        "followers_url": "https://api.github.com/users/ubiquity/followers",
        "following_url": "https://api.github.com/users/ubiquity/following{/other_user}",
        "gists_url": "https://api.github.com/users/ubiquity/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ubiquity/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ubiquity/subscriptions",
        "organizations_url": "https://api.github.com/users/ubiquity/orgs",
        "repos_url": "https://api.github.com/users/ubiquity/repos",
        "events_url": "https://api.github.com/users/ubiquity/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ubiquity/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "name": "UbiquiBot",
      "description": "This bot automates functionality of the DevPool by Ubiquity DAO.",
      "external_url": "https://github.com/ubiquity/ubiquity-os",
      "html_url": "https://github.com/apps/ubiquity-os",
      "created_at": "2022-09-09T11:32:39Z",
      "updated_at": "2024-08-14T05:53:50Z",
      "permissions": {
        "actions": "write",
        "contents": "write",
        "issues": "write",
        "members": "read",
        "metadata": "read",
        "pull_requests": "write"
      },
      "events": [
        "commit_comment",
        "create",
        "delete",
        "fork",
        "gollum",
        "issues",
        "issue_comment",
        "label",
        "member",
        "membership",
        "merge_queue_entry",
        "milestone",
        "organization",
        "public",
        "pull_request",
        "pull_request_review",
        "pull_request_review_comment",
        "pull_request_review_thread",
        "push",
        "release",
        "repository",
        "repository_dispatch",
        "star",
        "team",
        "team_add",
        "watch",
        "workflow_dispatch",
        "workflow_job",
        "workflow_run"
      ]
    }
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2077346529",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2077346529",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2077346529,
    "node_id": "IC_kwDOLUK0B8570crh",
    "user": {
      "login": "ubiquity-os[bot]",
      "id": 113181824,
      "node_id": "BOT_kgDOBr8EgA",
      "avatar_url": "https://avatars.githubusercontent.com/in/236521?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ubiquity-os%5Bbot%5D",
      "html_url": "https://github.com/apps/ubiquity-os",
      "followers_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2024-04-25T14:29:38Z",
    "updated_at": "2024-04-25T14:29:38Z",
    "author_association": "NONE",
    "body": "```diff\n+ Evaluating results. Please wait...\n```\n<!-- Ubiquity - ok - renderMainActionOutput - e402d16\n{\n  \"eventName\": \"issues.closed\",\n  \"issueOwner\": \"ubiquity-os\",\n  \"issueRepository\": \"conversation-rewards\",\n  \"issueNumber\": \"5\",\n  \"collaborators\": \"[\\\"0x4007\\\",\\\"gentlementlegen\\\",\\\"molecula451\\\",\\\"web4er\\\",\\\"gitcoindev\\\",\\\"Draeieg\\\",\\\"rndquu\\\",\\\"whilefoo\\\"]\",\n  \"installationId\": \"37628281\",\n  \"caller\": \"issueClosed\",\n  \"revision\": null\n}\n-->",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2077346529/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": {
      "id": 236521,
      "slug": "ubiquity-os",
      "node_id": "A_kwHOBI33Lc4AA5vp",
      "owner": {
        "login": "ubiquity",
        "id": 76412717,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjc2NDEyNzE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/76412717?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ubiquity",
        "html_url": "https://github.com/ubiquity",
        "followers_url": "https://api.github.com/users/ubiquity/followers",
        "following_url": "https://api.github.com/users/ubiquity/following{/other_user}",
        "gists_url": "https://api.github.com/users/ubiquity/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ubiquity/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ubiquity/subscriptions",
        "organizations_url": "https://api.github.com/users/ubiquity/orgs",
        "repos_url": "https://api.github.com/users/ubiquity/repos",
        "events_url": "https://api.github.com/users/ubiquity/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ubiquity/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "name": "UbiquiBot",
      "description": "This bot automates functionality of the DevPool by Ubiquity DAO.",
      "external_url": "https://github.com/ubiquity/ubiquity-os",
      "html_url": "https://github.com/apps/ubiquity-os",
      "created_at": "2022-09-09T11:32:39Z",
      "updated_at": "2024-08-14T05:53:50Z",
      "permissions": {
        "actions": "write",
        "contents": "write",
        "issues": "write",
        "members": "read",
        "metadata": "read",
        "pull_requests": "write"
      },
      "events": [
        "commit_comment",
        "create",
        "delete",
        "fork",
        "gollum",
        "issues",
        "issue_comment",
        "label",
        "member",
        "membership",
        "merge_queue_entry",
        "milestone",
        "organization",
        "public",
        "pull_request",
        "pull_request_review",
        "pull_request_review_comment",
        "pull_request_review_thread",
        "push",
        "release",
        "repository",
        "repository_dispatch",
        "star",
        "team",
        "team_add",
        "watch",
        "workflow_dispatch",
        "workflow_job",
        "workflow_run"
      ]
    }
  },
  {
    "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2077348779",
    "html_url": "https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2077348779",
    "issue_url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/5",
    "id": 2077348779,
    "node_id": "IC_kwDOLUK0B8570dOr",
    "user": {
      "login": "ubiquity-os[bot]",
      "id": 113181824,
      "node_id": "BOT_kgDOBr8EgA",
      "avatar_url": "https://avatars.githubusercontent.com/in/236521?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ubiquity-os%5Bbot%5D",
      "html_url": "https://github.com/apps/ubiquity-os",
      "followers_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ubiquity-os%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2024-04-25T14:30:38Z",
    "updated_at": "2024-04-25T14:30:38Z",
    "author_association": "NONE",
    "body": "\n  <details>\n    <summary>\n      <b\n        ><h3>\n          <a\n            href=\"https://pay.ubq.fi/?claim=W3sidHlwZSI6ImVyYzIwLXBlcm1pdCIsInBlcm1pdCI6eyJwZXJtaXR0ZWQiOnsidG9rZW4iOiIweGU5MUQxNTNFMGI0MTUxOEEyQ2U4RGQzRDc5NDRGYTg2MzQ2M2E5N2QiLCJhbW91bnQiOiIxNDE1MDAwMDAwMDAwMDAwMDAwMDAifSwibm9uY2UiOiI5Njk5MTUwMDg2MzE0MzIzMDg5NzY5NTExNzk2MTIzODAwNDAzMTc3NTUxMTU4NTgxMTU3MTIzNTYwODY0OTA2NjcyODc3MzYwMDc5OCIsImRlYWRsaW5lIjoiMTE1NzkyMDg5MjM3MzE2MTk1NDIzNTcwOTg1MDA4Njg3OTA3ODUzMjY5OTg0NjY1NjQwNTY0MDM5NDU3NTg0MDA3OTEzMTI5NjM5OTM1In0sInRyYW5zZmVyRGV0YWlscyI6eyJ0byI6IjB4NDAwN0NFMjA4M2M3RjNFMTgwOTdhZUIzQTM5YmI4ZUMxNDlhMzQxZCIsInJlcXVlc3RlZEFtb3VudCI6IjE0MTUwMDAwMDAwMDAwMDAwMDAwMCJ9LCJvd25lciI6IjB4NDRDYTE1RGIxMDFmRDFjMTk0NDY3RGI2QUYwYzY3QzZCYkY0QUI1MSIsInNpZ25hdHVyZSI6IjB4NTI2ZjMwMzRhOWZkN2Q0NTA0MTQ1ZTgyYmQ1OTlmODUyNjhmMDAyYzA4ZDlkZWRlOTM5ZmY2ZDM1MGYzNzk5ZTMxYWQwNDQyODI4MDc0YjNjNzM1MWJjZDAzODYyMWQzOTc0YzQyMzVkMTY2OGRmZTNjZDE2NDJiNDQ4YTA5MzAxYiIsIm5ldHdvcmtJZCI6MTAwfV0%3D\"\n          >\n            [ 141.5 WXDAI ]</a\n          >\n        </h3>\n        <h6>@0x4007</h6></b\n      >\n    </summary>\n    <h6>Contributions Overview</h6>\n<table><thead>\n<tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th>\n</thead><tbody>\n<tr><td>Issue</td><td>Comment</td><td>9</td><td>139.9</td></tr>\n<tr><td>Review</td><td>Comment</td><td>1</td><td>1.6</td></tr>\n</tbody></table>\n    <h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2030164289\">@whilefoo rfc on how we can deal with comment outputs. Perhaps w...</a></h6></td><td><details><summary>5.7</summary>\n<pre>code:\n  count: 1\n  score: \"1\"\n  words: 0\n</pre>\n</details></td><td>0.62</td><td>5.7</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2033488255\">> This needs https://github.com/ubiquity-os/conversation-rewards/p...</a></h6></td><td>1.7</td><td>0.71</td><td>1.7</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036355445\">> \r\n> there are a couple of options:\r\n> \r\n> 1. we let the conver...</a></h6></td><td><details><summary>35.5</summary>\n<pre>li:\n  count: 5\n  score: \"5\"\n  words: 142\ncode:\n  count: 2\n  score: \"2\"\n  words: 2\n</pre>\n</details></td><td>0.65</td><td>35.5</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036370459\">> I think each plugin should output JSON not html as it is not r...</a></h6></td><td><details><summary>20.6</summary>\n<pre>code:\n  count: 4\n  score: \"4\"\n  words: 6\n</pre>\n</details></td><td>0.69</td><td>20.6</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036393020\">> If you want to manipulate and convey data, HTML really is not ...</a></h6></td><td><details><summary>17.9</summary>\n<pre>code:\n  count: 5\n  score: \"5\"\n  words: 4\n</pre>\n</details></td><td>0.65</td><td>17.9</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036433646\">> But then how do we consider the formatting of that output?\r\n\r\n...</a></h6></td><td><details><summary>27.1</summary>\n<pre>h3:\n  count: 1\n  score: \"1\"\n  words: 1\na:\n  count: 2\n  score: \"2\"\n  words: 3\ncode:\n  count: 3\n  score: \"3\"\n  words: 9\n</pre>\n</details></td><td>0.64</td><td>27.1</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036516869\">> so basically they become a single plugin with no purpose to sp...</a></h6></td><td><details><summary>12.8</summary>\n<pre>li:\n  count: 2\n  score: \"2\"\n  words: 6\ncode:\n  count: 1\n  score: \"1\"\n  words: 1\n</pre>\n</details></td><td>0.6</td><td>12.8</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2053332029\">> I realized that to carry this task properly we need to handle ...</a></h6></td><td><details><summary>15.7</summary>\n<pre>li:\n  count: 4\n  score: \"4\"\n  words: 39\ncode:\n  count: 2\n  score: \"2\"\n  words: 4\n</pre>\n</details></td><td>0.75</td><td>15.7</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2055783331\">Consider calling it \"contributor\" and \"collaborator\" as that is ...</a></h6></td><td>2.9</td><td>0.69</td><td>2.9</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/pull/12#issuecomment-2063712447\">> @0x4007 I believe that if I had all the tests in this PR it wi...</a></h6></td><td>1.6</td><td>0.2</td><td>1.6</td></tr></tbody></table>\n  </details>\n  \n\n  <details>\n    <summary>\n      <b\n        ><h3>\n          <a\n            href=\"https://pay.ubq.fi/?claim=W3sidHlwZSI6ImVyYzIwLXBlcm1pdCIsInBlcm1pdCI6eyJwZXJtaXR0ZWQiOnsidG9rZW4iOiIweGU5MUQxNTNFMGI0MTUxOEEyQ2U4RGQzRDc5NDRGYTg2MzQ2M2E5N2QiLCJhbW91bnQiOiI2MTY5MDAwMDAwMDAwMDAwMDAwMDAifSwibm9uY2UiOiI0NTcxOTIzMDMxNzE4MjM0MDY3NjgwOTkzNjY1ODUyNTI1ODkwODI4MjE1MTk3ODY3NTk1ODc4ODQzOTAyOTMyODgwMjQxODA1NjI0NyIsImRlYWRsaW5lIjoiMTE1NzkyMDg5MjM3MzE2MTk1NDIzNTcwOTg1MDA4Njg3OTA3ODUzMjY5OTg0NjY1NjQwNTY0MDM5NDU3NTg0MDA3OTEzMTI5NjM5OTM1In0sInRyYW5zZmVyRGV0YWlscyI6eyJ0byI6IjB4MGZDMWI5MDliYTkyNjVBODQ2YjgyQ0Y0Q0UzNTJmYzNlN0VlQjJFRCIsInJlcXVlc3RlZEFtb3VudCI6IjYxNjkwMDAwMDAwMDAwMDAwMDAwMCJ9LCJvd25lciI6IjB4NDRDYTE1RGIxMDFmRDFjMTk0NDY3RGI2QUYwYzY3QzZCYkY0QUI1MSIsInNpZ25hdHVyZSI6IjB4ZjJjY2NmZDEyYjk4OWEzNmM0YTA4Zjg2OTdmYWFlMzg5Njc4MDE0NDFmZTY2YzRjMmYyYmY5MDBkN2Q2NGY5MjJjODc2NTViYTJkYjQ4NzFjZmQyODVlZGQ3ZjdiZjU0ZjZlZGNlZDU5M2VmNDQ0NWRmYzlmN2M3ZTRjNjcxOGQxYiIsIm5ldHdvcmtJZCI6MTAwfV0%3D\"\n          >\n            [ 616.9 WXDAI ]</a\n          >\n        </h3>\n        <h6>@gentlementlegen</h6></b\n      >\n    </summary>\n    <h6>Contributions Overview</h6>\n<table><thead>\n<tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th>\n</thead><tbody>\n<tr><td>Issue</td><td>Specification</td><td>1</td><td>23.6</td></tr>\n<tr><td>Issue</td><td>Task</td><td>1</td><td>400</td></tr>\n<tr><td>Issue</td><td>Comment</td><td>9</td><td>180.4</td></tr>\n<tr><td>Issue</td><td>Comment</td><td>9</td><td>0</td></tr>\n<tr><td>Review</td><td>Comment</td><td>2</td><td>8.6</td></tr>\n<tr><td>Review</td><td>Comment</td><td>2</td><td>4.3</td></tr>\n</tbody></table>\n    <h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5\">In the v1 of the Ubiquibot, when a result gets evaluated, a reca...</a></h6></td><td><details><summary>23.6</summary>\n<pre>a:\n  count: 1\n  score: \"1\"\n  words: 1\nli:\n  count: 3\n  score: \"3\"\n  words: 14\n</pre>\n</details></td><td>1</td><td>23.6</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2033404518\">This needs https://github.com/ubiquity-os/conversation-rewards/pul...</a></h6></td><td>6.6</td><td>0.54</td><td>6.6</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036174312\">To me 1 is the most straightforward to do for few reasons:\r\n- th...</a></h6></td><td><details><summary>25</summary>\n<pre>li:\n  count: 3\n  score: \"3\"\n  words: 41\n</pre>\n</details></td><td>0.7</td><td>25</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036367126\">I think each plugin should output JSON not html as it is not rel...</a></h6></td><td><details><summary>25.8</summary>\n<pre>code:\n  count: 3\n  score: \"3\"\n  words: 4\n</pre>\n</details></td><td>0.75</td><td>25.8</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036385985\">If you want to manipulate and convey data, HTML really is not ma...</a></h6></td><td><details><summary>27.8</summary>\n<pre>a:\n  count: 1\n  score: \"1\"\n  words: 1\n</pre>\n</details></td><td>0.61</td><td>27.8</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036411811\">But then how do we consider the formatting of that output?\r\n\r\nPr...</a></h6></td><td>31.8</td><td>0.66</td><td>31.8</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036458775\">This can work, but we skyrocket coupling and to me defeat purpos...</a></h6></td><td>11</td><td>0.61</td><td>11</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036535332\">@pavlovcik To mitigate that that's why inside the comment reward...</a></h6></td><td><details><summary>18</summary>\n<pre>code:\n  count: 1\n  score: \"1\"\n  words: 1\n</pre>\n</details></td><td>0.67</td><td>18</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2051094255\">I realized that to carry this task properly we need to handle fl...</a></h6></td><td><details><summary>13.6</summary>\n<pre>code:\n  count: 2\n  score: \"2\"\n  words: 4\n</pre>\n</details></td><td>0.7</td><td>13.6</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2054424028\">Agreed, I think currently there are 3 possible things to annotat...</a></h6></td><td><details><summary>20.8</summary>\n<pre>li:\n  count: 3\n  score: \"3\"\n  words: 47\ncode:\n  count: 7\n  score: \"7\"\n  words: 7\n</pre>\n</details></td><td>0.71</td><td>20.8</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2033404518\">This needs https://github.com/ubiquity-os/conversation-rewards/pul...</a></h6></td><td>-</td><td>0.54</td><td>-</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036174312\">To me 1 is the most straightforward to do for few reasons:\r\n- th...</a></h6></td><td><details><summary>-</summary>\n<pre>li:\n  count: 3\n  score: \"0\"\n  words: 41\n</pre>\n</details></td><td>0.7</td><td>-</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036367126\">I think each plugin should output JSON not html as it is not rel...</a></h6></td><td><details><summary>-</summary>\n<pre>code:\n  count: 3\n  score: \"0\"\n  words: 4\n</pre>\n</details></td><td>0.75</td><td>-</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036385985\">If you want to manipulate and convey data, HTML really is not ma...</a></h6></td><td><details><summary>-</summary>\n<pre>a:\n  count: 1\n  score: \"0\"\n  words: 1\n</pre>\n</details></td><td>0.61</td><td>-</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036411811\">But then how do we consider the formatting of that output?\r\n\r\nPr...</a></h6></td><td>-</td><td>0.66</td><td>-</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036458775\">This can work, but we skyrocket coupling and to me defeat purpos...</a></h6></td><td>-</td><td>0.61</td><td>-</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2036535332\">@pavlovcik To mitigate that that's why inside the comment reward...</a></h6></td><td><details><summary>-</summary>\n<pre>code:\n  count: 1\n  score: \"0\"\n  words: 1\n</pre>\n</details></td><td>0.67</td><td>-</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2051094255\">I realized that to carry this task properly we need to handle fl...</a></h6></td><td><details><summary>-</summary>\n<pre>code:\n  count: 2\n  score: \"0\"\n  words: 4\n</pre>\n</details></td><td>0.7</td><td>-</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2054424028\">Agreed, I think currently there are 3 possible things to annotat...</a></h6></td><td><details><summary>-</summary>\n<pre>li:\n  count: 3\n  score: \"0\"\n  words: 47\ncode:\n  count: 7\n  score: \"0\"\n  words: 7\n</pre>\n</details></td><td>0.71</td><td>-</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/pull/12#issuecomment-2056635516\">Example of successful comment posting with results:\r\nhttps://git...</a></h6></td><td>3.2</td><td>0.34</td><td>3.2</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/pull/12#issuecomment-2063348339\">@0x4007 I believe that if I had all the tests in this PR it will...</a></h6></td><td>5.4</td><td>0.59</td><td>5.4</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/pull/12#issuecomment-2056635516\">Example of successful comment posting with results:\r\nhttps://git...</a></h6></td><td>1.6</td><td>0.34</td><td>1.6</td></tr><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/pull/12#issuecomment-2063348339\">@0x4007 I believe that if I had all the tests in this PR it will...</a></h6></td><td>2.7</td><td>0.59</td><td>2.7</td></tr></tbody></table>\n  </details>\n  \n\n  <details>\n    <summary>\n      <b\n        ><h3>\n          <a\n            href=\"https://pay.ubq.fi/?claim=W3sidHlwZSI6ImVyYzIwLXBlcm1pdCIsInBlcm1pdCI6eyJwZXJtaXR0ZWQiOnsidG9rZW4iOiIweGU5MUQxNTNFMGI0MTUxOEEyQ2U4RGQzRDc5NDRGYTg2MzQ2M2E5N2QiLCJhbW91bnQiOiIyMTMwMDAwMDAwMDAwMDAwMDAwMCJ9LCJub25jZSI6IjM2Nzg2NTAzNTI5MTczNTQ1MjUyMjczOTUzNTM1NzA4NzgwNTk3NTc4MjA1MDM2NzkyMTg3ODk2ODgxOTcxNTEyNjg3MTM0Njk4MzY3IiwiZGVhZGxpbmUiOiIxMTU3OTIwODkyMzczMTYxOTU0MjM1NzA5ODUwMDg2ODc5MDc4NTMyNjk5ODQ2NjU2NDA1NjQwMzk0NTc1ODQwMDc5MTMxMjk2Mzk5MzUifSwidHJhbnNmZXJEZXRhaWxzIjp7InRvIjoiMHhDZWUzM0M5ODQxMERFYmU2N0EzMTlDYjk0RjM5ZTQwMzQzNURmMzE5IiwicmVxdWVzdGVkQW1vdW50IjoiMjEzMDAwMDAwMDAwMDAwMDAwMDAifSwib3duZXIiOiIweDQ0Q2ExNURiMTAxZkQxYzE5NDQ2N0RiNkFGMGM2N0M2QmJGNEFCNTEiLCJzaWduYXR1cmUiOiIweDU0ZDMxZTAzMmRiMjlmZDlhZjg4MzliZDJiN2E4NjRmYThiY2FlOWJmODAwYjE0Y2JlMDFlYjJlZjk1Y2I5ODgyMzRjMzkxNjE0MzlhZDVhZTFjM2M4MGQ4YmIzYTYyOWE1Y2U2NzEwZDIxZTQ0MTRhYzg1YTRlZjYwOGZlYWY4MWIiLCJuZXR3b3JrSWQiOjEwMH1d\"\n          >\n            [ 21.3 WXDAI ]</a\n          >\n        </h3>\n        <h6>@whilefoo</h6></b\n      >\n    </summary>\n    <h6>Contributions Overview</h6>\n<table><thead>\n<tr><th>View</th><th>Contribution</th><th>Count</th><th>Reward</th>\n</thead><tbody>\n<tr><td>Issue</td><td>Comment</td><td>1</td><td>21.3</td></tr>\n</tbody></table>\n    <h6>Conversation Incentives</h6><table><thead><tr><th>Comment</th><th>Formatting</th><th>Relevance</th><th>Reward</th></tr></thead><tbody><tr><td><h6><a href=\"https://github.com/ubiquity-os/conversation-rewards/issues/5#issuecomment-2035427134\">> @whilefoo rfc on how we can deal with comment outputs. Perhaps...</a></h6></td><td><details><summary>21.3</summary>\n<pre>li:\n  count: 3\n  score: \"3\"\n  words: 72\ncode:\n  count: 1\n  score: \"1\"\n  words: 0\n</pre>\n</details></td><td>0.67</td><td>21.3</td></tr></tbody></table>\n  </details>\n  \n<!-- Ubiquity - Transactions - generatePermits - a3e647e\n[\n  {\n    \"permit\": {\n      \"permitted\": {\n        \"token\": \"0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d\",\n        \"amount\": \"141500000000000000000\"\n      },\n      \"nonce\": \"96991500863143230897695117961238004031775511585811571235608649066728773600798\",\n      \"deadline\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\"\n    },\n    \"transferDetails\": {\n      \"to\": \"0x4007CE2083c7F3E18097aeB3A39bb8eC149a341d\",\n      \"requestedAmount\": \"141500000000000000000\"\n    },\n    \"owner\": \"0x44Ca15Db101fD1c194467Db6AF0c67C6BbF4AB51\",\n    \"signature\": \"0x526f3034a9fd7d4504145e82bd599f85268f002c08d9dede939ff6d350f3799e31ad0442828074b3c7351bcd038621d3974c4235d1668dfe3cd1642b448a09301b\",\n    \"networkId\": 100\n  },\n  {\n    \"permit\": {\n      \"permitted\": {\n        \"token\": \"0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d\",\n        \"amount\": \"616900000000000000000\"\n      },\n      \"nonce\": \"45719230317182340676809936658525258908282151978675958788439029328802418056247\",\n      \"deadline\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\"\n    },\n    \"transferDetails\": {\n      \"to\": \"0x0fC1b909ba9265A846b82CF4CE352fc3e7EeB2ED\",\n      \"requestedAmount\": \"616900000000000000000\"\n    },\n    \"owner\": \"0x44Ca15Db101fD1c194467Db6AF0c67C6BbF4AB51\",\n    \"signature\": \"0xf2cccfd12b989a36c4a08f8697faae38967801441fe66c4c2f2bf900d7d64f922c87655ba2db4871cfd285edd7f7bf54f6edced593ef4445dfc9f7c7e4c6718d1b\",\n    \"networkId\": 100\n  },\n  {\n    \"permit\": {\n      \"permitted\": {\n        \"token\": \"0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d\",\n        \"amount\": \"21300000000000000000\"\n      },\n      \"nonce\": \"36786503529173545252273953535708780597578205036792187896881971512687134698367\",\n      \"deadline\": \"115792089237316195423570985008687907853269984665640564039457584007913129639935\"\n    },\n    \"transferDetails\": {\n      \"to\": \"0xCee33C98410DEbe67A319Cb94F39e403435Df319\",\n      \"requestedAmount\": \"21300000000000000000\"\n    },\n    \"owner\": \"0x44Ca15Db101fD1c194467Db6AF0c67C6BbF4AB51\",\n    \"signature\": \"0x54d31e032db29fd9af8839bd2b7a864fa8bcae9bf800b14cbe01eb2ef95cb988234c39161439ad5ae1c3c80d8bb3a629a5ce6710d21e4414ac85a4ef608feaf81b\",\n    \"networkId\": 100\n  }\n]\n-->",
    "reactions": {
      "url": "https://api.github.com/repos/ubiquity-os/conversation-rewards/issues/comments/2077348779/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": {
      "id": 236521,
      "slug": "ubiquity-os",
      "node_id": "A_kwHOBI33Lc4AA5vp",
      "owner": {
        "login": "ubiquity",
        "id": 76412717,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjc2NDEyNzE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/76412717?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ubiquity",
        "html_url": "https://github.com/ubiquity",
        "followers_url": "https://api.github.com/users/ubiquity/followers",
        "following_url": "https://api.github.com/users/ubiquity/following{/other_user}",
        "gists_url": "https://api.github.com/users/ubiquity/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ubiquity/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ubiquity/subscriptions",
        "organizations_url": "https://api.github.com/users/ubiquity/orgs",
        "repos_url": "https://api.github.com/users/ubiquity/repos",
        "events_url": "https://api.github.com/users/ubiquity/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ubiquity/received_events",
        "type": "Organization",
        "site_admin": false
      },
      "name": "UbiquiBot",
      "description": "This bot automates functionality of the DevPool by Ubiquity DAO.",
      "external_url": "https://github.com/ubiquity/ubiquity-os",
      "html_url": "https://github.com/apps/ubiquity-os",
      "created_at": "2022-09-09T11:32:39Z",
      "updated_at": "2024-08-14T05:53:50Z",
      "permissions": {
        "actions": "write",
        "contents": "write",
        "issues": "write",
        "members": "read",
        "metadata": "read",
        "pull_requests": "write"
      },
      "events": [
        "commit_comment",
        "create",
        "delete",
        "fork",
        "gollum",
        "issues",
        "issue_comment",
        "label",
        "member",
        "membership",
        "merge_queue_entry",
        "milestone",
        "organization",
        "public",
        "pull_request",
        "pull_request_review",
        "pull_request_review_comment",
        "pull_request_review_thread",
        "push",
        "release",
        "repository",
        "repository_dispatch",
        "star",
        "team",
        "team_add",
        "watch",
        "workflow_dispatch",
        "workflow_job",
        "workflow_run"
      ]
    }
  }
]
